[{"/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/index.js":"1","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/App.js":"2","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Header.js":"3","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Home.js":"4","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Login.js":"5","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/MyNetwork.jsx":"6","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Main.js":"7","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Leftside.js":"8","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Rightside.js":"9","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Post.jsx":"10","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Main/MainForm.js":"11"},{"size":272,"mtime":1639396169586,"results":"12","hashOfConfig":"13"},{"size":697,"mtime":1639396169582,"results":"14","hashOfConfig":"13"},{"size":5218,"mtime":1639396169582,"results":"15","hashOfConfig":"13"},{"size":1401,"mtime":1639396169582,"results":"16","hashOfConfig":"13"},{"size":3728,"mtime":1639396169582,"results":"17","hashOfConfig":"13"},{"size":1386,"mtime":1639396169582,"results":"18","hashOfConfig":"13"},{"size":5029,"mtime":1639396169582,"results":"19","hashOfConfig":"13"},{"size":4060,"mtime":1639396169582,"results":"20","hashOfConfig":"13"},{"size":2884,"mtime":1639396169582,"results":"21","hashOfConfig":"13"},{"size":1876,"mtime":1639396169582,"results":"22","hashOfConfig":"13"},{"size":4643,"mtime":1639396169582,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kq0s5l",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/index.js",[],"/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/App.js",[],"/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Header.js",["55","56","57"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Header = (props) => {\n  return (\n    <Container>\n      <Content>\n        <Logo>\n          <a href=\"/home\">\n            <img src=\"/images/home-logo.svg\" alt=\"\" />\n          </a>\n        </Logo>\n        <Search>\n          <div>\n            <input type=\"text\" placeholder=\"Search\" />\n          </div>\n          <SearchIcon>\n            <img src=\"/images/search-icon.svg\" alt=\"\" />\n          </SearchIcon>\n        </Search>\n        <Nav>\n          <NavListWrap>\n            <NavList className=\"active\">\n              <Link to=\"home\">\n                <img src=\"/images/nav-home.svg\" alt=\"\" />\n                <span>Home</span>\n              </Link>\n            </NavList>\n\n            <NavList>\n              <Link to=\"my-network\">\n                <img src=\"/images/nav-network.svg\" alt=\"\" />\n                <span>My Network</span>\n              </Link>\n            </NavList>\n{/* \n            <NavList>\n              <a>\n                <img src=\"/images/nav-jobs.svg\" alt=\"\" />\n                <span>Jobs</span>\n              </a>\n            </NavList>\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-messaging.svg\" alt=\"\" />\n                <span>Messaging</span>\n              </a>\n            </NavList> */}\n\n            <NavList>\n              {/* <a>\n                <img src=\"/images/nav-notifications.svg\" alt=\"\" />\n                <span>Notifications</span>\n              </a> */}\n            </NavList>\n\n            <User>\n              <a>\n                <img src=\"/images/user.svg\" alt=\"\" />\n                <span>Me</span>\n                <img src=\"/images/down-icon.svg\" alt=\"\" />\n              </a>\n\n              <SignOut>\n                <a>Sign Out</a>\n              </SignOut>\n            </User>\n\n            {/* <Work>\n              <a>\n                <img src=\"/images/nav-work.svg\" alt=\"\" />\n                <span>\n                  Work\n                  <img src=\"/images/down-icon.svg\" alt=\"\" />\n                </span>\n              </a>\n            </Work> */}\n          </NavListWrap>\n        </Nav>\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  background-color: #803a0a;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  left: 0;\n  padding: 0 24px;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: 100;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  min-height: 100%;\n  max-width: 1128px;\n`;\n\nconst Logo = styled.span`\n  margin-right: 8px;\n  font-size: 0px;\n`;\n\nconst Search = styled.div`\n  opacity: 1;\n  flex-grow: 1;\n  position: relative;\n  & > div {\n    max-width: 280px;\n    input {\n      border: none;\n      box-shadow: none;\n      background-color: #eef3f8;\n      border-radius: 2px;\n      color: rgba(0, 0, 0, 0.9);\n      width: 218px;\n      padding: 0 8px 0 40px;\n      line-height: 1.75;\n      font-weight: 400;\n      font-size: 14px;\n      height: 34px;\n      border-color: #dce6f1;\n      vertical-align: text-top;\n    }\n  }\n`;\n\nconst SearchIcon = styled.div`\n  width: 40px;\n  position: absolute;\n  z-index: 1;\n  top: 10px;\n  left: 2px;\n  border-radius: 0 2px 2px 0;\n  margin: 0;\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Nav = styled.nav`\n  margin-left: auto;\n  display: block;\n  @media (max-width: 768px) {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    background: white;\n    width: 100%;\n  }\n`;\n\nconst NavListWrap = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  list-style-type: none;\n\n  .active {\n    span:after {\n      content: \"\";\n      transform: scaleX(1);\n      border-bottom: 2px solid var(--white, #fff);\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      transition: transform 0.2s ease-in-out;\n      width: 100%;\n      border-color: rgba(0, 0, 0, 0.9);\n    }\n  }\n`;\n\nconst NavList = styled.li`\n  display: flex;\n  align-items: center;\n  a {\n    align-items: center;\n    background: transparent;\n    display: flex;\n    flex-direction: column;\n    font-size: 12px;\n    font-weight: 400;\n    justify-content: center;\n    line-height: 1.5;\n    min-height: 52px;\n    min-width: 80px;\n    position: relative;\n    text-decoration: none;\n\n    span {\n      color: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n    }\n\n    @media (max-width: 768px) {\n      min-width: 70px;\n    }\n  }\n\n  &:hover,\n  &:active {\n    a {\n      span {\n        color: rgba(0, 0, 0, 0.9);\n      }\n    }\n  }\n`;\n\nconst SignOut = styled.div`\n  position: absolute;\n  top: 45px;\n  background: white;\n  border-radius: 0 0 5px 5px;\n  width: 100px;\n  height: 40px;\n  font-size: 16px;\n  transition-duration: 167ms;\n  text-align: center;\n  display: none;\n`;\n\nconst User = styled(NavList)`\n  a > svg {\n    width: 24px;\n    border-radius: 50%;\n  }\n\n  a > img {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n  }\n\n  &:hover {\n    ${SignOut} {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n  }\n`;\n\nconst Work = styled(User)`\n  border-left: 1px solid rgba(0, 0, 0, 0.08);\n`;\n\nexport default Header;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Home.js",["58"],"import styled from \"styled-components\";\nimport Leftside from \"./Leftside\";\nimport Main from \"./Main\";\n\nimport Rightside from \"./Rightside\";\n\nconst Home = (props) => {\n  return (\n    <Container>\n      <Section>\n        \n      </Section>\n      <Layout>\n        <Leftside />\n        <Main />\n        <Rightside />\n      </Layout>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding-top: 52px;\n  max-width: 100%;\n  background-color: rgba(11, 226, 153, 0.56);\n  \n`;\n\nconst Content = styled.div`\n  max-width: 1128px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Section = styled.section`\n  min-height: 50px;\n  padding: 16px 0;\n  box-sizing: content-box;\n  text-align: center;\n  text-decoration: underline;\n  display: flex;\n  justify-content: center;\n  h5 {\n    color: #0a66c2;\n    font-size: 14px;\n    a {\n      font-weight: 700;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    color: #434649;\n    font-weight: 600;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-areas: \"leftside main rightside\";\n  grid-template-columns: minmax(0, 5fr) minmax(0, 12fr) minmax(300px, 7fr);\n  column-gap: 25px;\n  row-gap: 25px;\n  /* grid-template-row: auto; */\n  margin: 25px 0;\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nexport default Home;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Login.js",["59","60"],"import styled from \"styled-components\";\nimport { Link } from 'react-router-dom'\n\nconst Login = (props) => {\n  return (\n    <Container>\n      <Nav>\n        <a href=\"/\">\n          <img src=\"/images/login-logo.svg\" alt=\"\" />\n        </a>\n        {/* <div>\n          <Join>Join now</Join>\n          <SignIn>Sign in</SignIn>\n        </div> */}\n      </Nav>\n      <Section>\n        <Hero>\n          <h1>Welcome to Decentralized Social Network</h1>\n          {/* <img src=\"/images/login-hero.svg\" alt=\"\" /> */}\n          <img src=\"/images/ipfs2.png\" alt=\"\"  />\n        </Hero>\n        <Form>\n          <Google>\n            <Link to=\"home\">Let's Jump's to Dapps</Link>\n          </Google>\n        </Form>\n      </Section>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 0px;\n  background-color: rgba(16, 170, 193, 0.58);\n`;\n\nconst Nav = styled.nav`\n  max-width: 1128px;\n  margin: auto;\n  padding: 12px 0 16px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n\n  & > a {\n    width: 135px;\n    height: 34px;\n    @media (max-width: 768px) {\n      padding: 0 5px;\n    }\n  }\n`;\n\nconst Join = styled.a`\n  font-size: 16px;\n  padding: 10px 12px;\n  text-decoration: none;\n  border-radius: 4px;\n  color: rgba(0, 0, 0, 0.6);\n  margin-right: 12px;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n    color: rgba(0, 0, 0, 0.9);\n    text-decoration: none;\n  }\n`;\n\nconst SignIn = styled.a`\n  box-shadow: inset 0 0 0 1px #0a66c2;\n  color: #0a66c2;\n  border-radius: 24px;\n  transition-duration: 167ms;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 40px;\n  padding: 10px 24px;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0);\n  &:hover {\n    background-color: rgba(112, 181, 249, 0.15);\n    color: #0a66c2;\n    text-decoration: none;\n  }\n`;\n\nconst Section = styled.section`\n  display: flex;\n  align-content: start;\n  min-height: 700px;\n  padding-bottom: 138px;\n  padding-top: 40px;\n  padding: 60px 0;\n  position: relative;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 1128px;\n  align-items: center;\n  margin: auto;\n\n  @media (max-width: 768px) {\n    margin: auto;\n    min-height: 0px;\n  }\n`;\n\nconst Hero = styled.div`\n  width: 100%;\n  h1 {\n    padding-bottom: 0;\n    width: 55%;\n    font-size: 56px;\n    color: rgba(80, 104, 27, 0.85);\n    font-weight: 200;\n    line-height: 70px;\n    @media (max-width: 768px) {\n      text-align: center;\n      font-size: 20px;\n      width: 100%;\n      line-height: 2;\n    }\n  }\n\n  img {\n    /* z-index: -1; */\n    width: 500x;\n    height: 500px;\n    position: absolute;\n    bottom: -2px;\n    right: -30px;\n    top : -1px;\n    // animation: myAnim 5s ease-in-out 3s 6 alternate-reverse both;\n    @media (max-width: 768px) {\n      top: 230px;\n      width: initial;\n      position: initial;\n      height: initial;\n    }\n    // @keyframes myAnim {\n    //   0% {\n    //     opacity: 0;\n    //     transform: rotate(-540deg) scale(0);\n    //   }\n\n    //   100% {\n    //     opacity: 1;\n    //     transform: rotate(0) scale(1);\n    //   }\n    }\n  }\n`;\n\nconst Form = styled.div`\n  margin-top: 100px;\n  width: 408px;\n  @media (max-width: 768px) {\n    margin-top: 20px;\n  }\n`;\n\nconst Google = styled.button`\n  display: flex;\n  justify-content: center;\n  background-color: #fff;\n  align-items: center;\n  height: 56px;\n  width: 100%;\n  border-radius: 28px;\n  box-shadow: inset 0 0 0 1px rgb(0 0 0 / 60%),\n    inset 0 0 0 2px rgb(0 0 0 / 0%) inset 0 0 0 1px rgb(0 0 0 / 0);\n\n  vertical-align: middle;\n  z-index: 0;\n  transition-duration: 167ms;\n  font-size: 20px;\n  color: rgba(0, 0, 0, 0.6);\n  &:hover {\n    background-color: rgba(207, 207, 207, 0.25);\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport default Login;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/MyNetwork.jsx",["61","62","63"],"import styled from \"styled-components\";\nimport Leftside from \"./Leftside\";\nimport Post from \"./Post\";\n \nimport Rightside from \"./Rightside\";\n \nconst MyNetwork = (props) => {\n  return (\n    <Container>\n      <Section />       \n \n      <Layout>\n          <Post />\n       </Layout>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding-top: 52px;\n  max-width: 100%;\n  background-color: rgba(11, 226, 153, 0.56);\n  \n`;\n\nconst Content = styled.div`\n  max-width: 1128px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Section = styled.section`\n  min-height: 50px;\n   padding: 16px 0;\n  box-sizing: content-box;\n  text-align: center;\n  text-decoration: underline;\n  display: flex;\n  justify-content: center;\n  h5 {\n    color: #0a66c2;\n    font-size: 14px;\n    a {\n      font-weight: 700;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    color: #434649;\n    font-weight: 600;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-areas: \"leftside main rightside\";\n  grid-template-columns: minmax(0, 5fr) minmax(0, 25fr) minmax(30px, 2fr);\n  column-gap: 25px;\n  row-gap: 25px;\n \n  /* grid-template-row: auto; */\n  margin: 25px 130px;\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    padding: 0 5px;\n  }\n  margin-left: 130px;\n`;\n\nexport default MyNetwork;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Main.js",["64"],"import Decentragram from '../abis/Decentragram.json'\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n   import Web3 from 'web3';\n import MainForm from './Main/MainForm';\nimport styled from \"styled-components\";\nimport Header from './Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\n\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass Main extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n\n    await axios\n      .get(\"http://localhost:8000/api/users/show_post\")\n      .then((posts) => {\n        const { data } = posts;\n        console.log(data, \"data\");\n      })\n      .catch((error) => {\n        console.log(error, \"datas error\");\n      });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    // Network ID\n    const networkId = await web3.eth.net.getId();\n    const networkData = Decentragram.networks[networkId];\n    if (networkData) {\n      const decentragram = new web3.eth.Contract(\n        Decentragram.abi,\n        networkData.address\n      );\n      this.setState({ decentragram });\n      const imagesCount = await decentragram.methods.imageCount().call();\n      this.setState({ imagesCount });\n      // Load images\n      for (var i = imagesCount; i > 0; i--) {\n        const image = await decentragram.methods.images(i).call();\n        this.setState({\n          images: [...this.state.images, image],\n        });\n      }\n      // Sort images. Show highest tipped images first\n      this.setState({\n        images: this.state.images.sort((a, b) => b.tipAmount - a.tipAmount),\n      });\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Dapps contract not deployed to detected network.\");\n    }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n      console.log(\"buffer\", this.state.buffer);\n    };\n  };\n\n  async uploadImage(description) {\n    console.log(\"Submitting file to ipfs...\");\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log(\"Ipfs result\", result);\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      this.setState({ loading: true });\n      this.state.decentragram.methods\n        .uploadImage(result[0].hash, description)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          // window.location.reload();\n          this.setState({ loading: false });\n\n          axios\n            .post(\"http://localhost:8000/api/users/add_post\", {\n              user_id: this.state.account,\n              title: description,\n              image: result[0].hash,\n            })\n            .then((response) => {\n              console.log(response, null);\n            })\n            .catch((error) => {\n              console.log(error, undefined, \"errro\");\n            });\n \n        });\n\n \n    });\n      \n    console.log(\"hello we are now in last part\");\n  }\n\n  tipImageOwner(id, tipAmount) {\n    this.setState({ loading: true });\n    this.state.decentragram.methods\n      .tipImageOwner(id)\n      .send({ from: this.state.account, value: tipAmount })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      decentragram: null,\n      images: [],\n      loading: true,\n    };\n\n    this.uploadImage = this.uploadImage.bind(this);\n    this.tipImageOwner = this.tipImageOwner.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center mt-5\">\n            <p>Loading...</p>\n          </div>\n        ) : (\n          <Container>\n            <Header account={this.state.account} />\n            <MainForm\n              images={this.state.images}\n              captureFile={this.captureFile}\n              uploadImage={this.uploadImage}\n              tipImageOwner={this.tipImageOwner}\n            />\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\nconst Container = styled.div`\n  grid-area: main;\n`;\nexport default Main;\n\n \n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Leftside.js",["65","66","67","68","69","70","71"],"import styled from \"styled-components\";\n\nconst Leftside = (props) => {\n  return (\n    <Container>\n      <ArtCard>\n        <UserInfo>\n          <CardBackground />\n          <a>\n            <Photo />\n            <Link>Welcome, there!</Link>\n          </a>\n          <a>\n            <AddPhotoText>Add a photo</AddPhotoText>\n          </a>\n        </UserInfo>\n        <Widget>\n          <a>\n            <div>\n              <span>Connections</span>\n              <span>Grow your network</span>\n            </div>\n            <img src=\"/images/widget-icon.svg\" alt=\"\" />\n          </a>\n        </Widget>\n        <Item>\n          <span>\n            <img src=\"/images/item-icon.svg\" alt=\"\" />\n            My Items\n          </span>\n        </Item>\n      </ArtCard>\n\n      <CommunityCard>\n        <a>\n          <span>Groups</span>\n        </a>\n        <a>\n          <span>\n            Events\n            <img src=\"/images/plus-icon.svg\" alt=\"\" />\n          </span>\n        </a>\n        <a>\n          <span>Follow Hashtags</span>\n        </a>\n        <a>\n          <span>Discover more</span>\n        </a>\n      </CommunityCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  grid-area: leftside;\n`;\n\nconst ArtCard = styled.div`\n  text-align: center;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background-color: #803a0a;\n  border-radius: 5px;\n  transition: box-shadow 83ms;\n  position: relative;\n  border: none;\n  box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 0 0 rgb(0 0 0 / 20%);\n`;\n\nconst UserInfo = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 12px 12px 16px;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n\nconst CardBackground = styled.div`\n  background: url(\"/images/card-bg.svg\");\n  background-position: center;\n  background-size: 462px;\n  height: 54px;\n  margin: -12px -12px 0;\n`;\n\nconst Photo = styled.div`\n  box-shadow: none;\n  background-image: url(\"/images/photo.svg\");\n  width: 72px;\n  height: 72px;\n  box-sizing: border-box;\n  background-clip: content-box;\n  background-color: white;\n  background-position: center;\n  background-size: 60%;\n  background-repeat: no-repeat;\n  border: 2px solid white;\n  margin: -38px auto 12px;\n  border-radius: 50%;\n`;\n\nconst Link = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(0, 0, 0, 0.9);\n  font-weight: 600;\n`;\n\nconst AddPhotoText = styled.div`\n  color: #0a66c2;\n  margin-top: 4px;\n  font-size: 12px;\n  line-height: 1.33;\n  font-weight: 400;\n`;\n\nconst Widget = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  & > a {\n    text-decoration: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 4px 12px;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.08);\n    }\n\n    div {\n      display: flex;\n      flex-direction: column;\n      text-align: left;\n      span {\n        font-size: 12px;\n        line-height: 1.333;\n        &:first-child {\n          color: rgba(0, 0, 0, 0.6);\n        }\n        &:nth-child(2) {\n          color: rgba(0, 0, 0, 1);\n        }\n      }\n    }\n  }\n\n  svg {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n\nconst Item = styled.a`\n  border-color: rgba(0, 0, 0, 0.8);\n  text-align: left;\n  padding: 12px;\n  font-size: 12px;\n  display: block;\n  span {\n    display: flex;\n    align-items: center;\n    color: rgba(0, 0, 0, 1);\n    svg {\n      color: rgba(0, 0, 0, 0.6);\n    }\n  }\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst CommunityCard = styled(ArtCard)`\n  padding: 8px 0 0;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  a {\n    color: black;\n    padding: 4px 12px 4px 12px;\n    font-size: 12px;\n\n    &:hover {\n      color: #0a66c2;\n    }\n\n    span {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    &:last-child {\n      color: rgba(0, 0, 0, 0.6);\n      text-decoration: none;\n\n      border-top: 1px solid #d6cec2;\n      padding: 12px;\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.08);\n      }\n    }\n  }\n`;\n\nexport default Leftside;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Rightside.js",["72","73"],"import styled from \"styled-components\";\n\nconst Rightside = (props) => {\n  return (\n    <Container>\n      <FollowCard>\n        <Title>\n          <h2>Add to your feed</h2>\n          {/* <img src=\"/images/feed-icon.svg\" alt=\"\" /> */}\n        </Title>\n\n        <FeedList>\n          <img src=\"/images/right_icons.png\" alt=\"\" width=\"300px\" />\n\n          {/* <li>\n            <a>\n              <Avatar />\n            </a>\n            <div>\n              <span>#Linkedin</span>\n              <button>Follow</button>\n            </div>\n          </li>\n          <li>\n            <a>\n              <Avatar />\n            </a>\n            <div>\n              <span>#Video</span>\n              <button>Follow</button>\n            </div>\n          </li> */}\n        </FeedList>\n\n        {/* <Recommendation>\n          View all recommendations\n          <img src=\"/images/right-icon.svg\" alt=\"\" />\n        </Recommendation> */}\n      </FollowCard>\n      <BannerCard>\n        <img src=\"/images/bannerCard.png\" alt=\"\" />\n        {/* <img\n          src=\"https://static-exp1.licdn.com/scds/common/u/images/promo/ads/li_evergreen_jobs_ad_300x250_v1.jpg\"\n          alt=\"\"\n        /> */}\n      </BannerCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  grid-area: rightside;\n`;\n\nconst FollowCard = styled.div`\n  text-align: center;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background-color: #803a0a;\n  border-radius: 5px;\n  position: relative;\n  border: none;\n  box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 0 0 rgb(0 0 0 / 20%);\n  padding: 12px;\n`;\n\nconst Title = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  width: 100%;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst FeedList = styled.ul`\n  margin-top: 16px;\n  li {\n    display: flex;\n    align-items: center;\n    margin: 12px 0;\n    position: relative;\n    font-size: 14px;\n    & > div {\n      display: flex;\n      flex-direction: column;\n    }\n\n    button {\n      background-color: transparent;\n      color: rgba(0, 0, 0, 0.6);\n      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.6);\n      padding: 16px;\n      align-items: center;\n      border-radius: 15px;\n      box-sizing: border-box;\n      font-weight: 600;\n      display: inline-flex;\n      justify-content: center;\n      max-height: 32px;\n      max-width: 480px;\n      text-align: center;\n      outline: none;\n    }\n  }\n`;\n\nconst Avatar = styled.div`\n  background-image: url(\"https://static-exp1.licdn.com/sc/h/1b4vl1r54ijmrmcyxzoidwmxs\");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 48px;\n  height: 48px;\n  margin-right: 8px;\n`;\n\nconst Recommendation = styled.a`\n  color: #0a66c2;\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\n\nconst BannerCard = styled(FollowCard)`\n  img {\n    width: 100%;\n    height: 100%;\n    \n  }\n`;\n\nexport default Rightside;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Post.jsx",["74","75","76","77"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\n\nfunction Post() {\n  const [posts, setPosts] = useState([]);\n  //  posts?.map((post) => {\n  //    console.log(post,NaN, ' ');\n  //   })\n  const getData = async () => {\n    await axios\n      .get(\"http://localhost:8000/api/users/show_post\")\n      .then((res) => {\n        const { data } = res;\n        setPosts(data);\n      })\n      .catch((error) => {\n        console.log(error, \"datas error\");\n      });\n  };\n  useEffect(async () => {\n    await getData();\n  }, []);\n  return (\n    <div>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">user</th>\n            <th scope=\"col\">image</th>\n            <th scope=\"col\">created at</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {posts?.map((post, index) => (\n            <tr key={index}>\n              <th scope=\"row\">{post.user_id}</th>\n              <td scope=\"row\">{post.image}</td>\n              <td scope=\"row\">\n                <Moment fromNow>{post.created_at}</Moment>\n              </td>\n              <td scope=\"row\">\n                <Stack direction=\"row\" spacing={2}>\n                  <Button variant=\"contained\" color=\"success\">\n                    View\n                  </Button>\n                  <Button variant=\"contained\" color=\"success\">\n                    Edit\n                  </Button>\n                  <Button variant=\"outlined\" color=\"error\">\n                    Delete\n                  </Button>\n                </Stack>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default Post;\n","/media/raihan/Hello/Dapps-Linkdin/Linkdin-Dapps/src/components/Main/MainForm.js",["78","79"],"import React, { Component } from \"react\";\nimport Identicon from \"identicon.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\n\nconst PostWrapper = styled.div``;\nclass MainForm extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main\n            role=\"main\"\n            className=\"col-lg-12 ml-auto mr-auto\"\n            style={{ maxWidth: \"500px\" }}\n          >\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <h2>Share Post</h2>\n              <form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  const description = this.imageDescription.value;\n                  this.props.uploadImage(description);\n                }}\n              >\n                <input\n                  style={{\n                    backgroundColor: \"#803A0A\",\n                  }}\n                  type=\"file\"\n                  accept=\".jpg, .jpeg, .png, .bmp, .gif\"\n                  onChange={this.props.captureFile}\n                />\n                <div className=\"form-group mr-sm-2\">\n                  <br></br>\n                  <input\n                    // style={{\n                    //   backgroundColor: \"#803A0A\",\n                    // }}\n                    id=\"imageDescription\"\n                    type=\"text\"\n                    ref={(input) => {\n                      this.imageDescription = input;\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Image description...\"\n                    required\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block btn-lg\"\n                >\n                  Post\n                </button>\n              </form>\n              <p>&nbsp;</p>\n              {this.props.images.map((image, key) => {\n                return (\n                  <div\n                    style={{\n                      backgroundColor: \"red\",\n                    }}\n                    className=\"card mb-4\"\n                    key={key}\n                  >\n                    <div\n                      className=\"card-header\"\n                      style={{\n                        backgroundColor: \"#803A0A\",\n                      }}\n                    >\n                      <img\n                        className=\"mr-2\"\n                        width=\"30\"\n                        height=\"30\"\n                        src={`data:image/png;base64,${new Identicon(\n                          image.author,\n                          30\n                        ).toString()}`}\n                        alt=\"helo\"\n                      />\n                      <small className=\"text-muted\">{image.author}</small>\n                    </div>\n\n                    <ul\n                      id=\"imageList\"\n                      // style={{\n                      //   backgroundColor: \"red\",\n                      // }}\n                      className=\"list-group list-group-flush\"\n                    >\n                      <li className=\"list-group-item\">\n                        <p class=\"text-center\">\n                          <img\n                            src={`https://ipfs.infura.io/ipfs/${image.hash}`}\n                            style={{ maxWidth: \"420px\" }}\n                          />\n                        </p>\n                        <p>{image.description}</p>\n                      </li>\n                       <li key={key} className=\"list-group-item py-2\">\n                        <small className=\"float-left mt-1 text-muted\">\n                          TIPS: {window.web3.utils.fromWei(image.tipAmount.toString(), 'Ether')} ETH\n                        </small>\n                        <button\n                          className=\"btn btn-link btn-sm float-right pt-0\"\n                          name={image.id}\n                          onClick={(event) => {\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\n                            console.log(event.target.name, tipAmount)\n                            this.props.tipImageOwner(event.target.name, tipAmount)\n                          }}\n                        >\n                          TIP 0.1 ETH\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                );\n              })}\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainForm;\n",{"ruleId":"80","severity":1,"message":"81","line":60,"column":15,"nodeType":"82","endLine":60,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":67,"column":17,"nodeType":"82","endLine":67,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":258,"column":7,"nodeType":"85","messageId":"86","endLine":258,"endColumn":11},{"ruleId":"83","severity":1,"message":"87","line":29,"column":7,"nodeType":"85","messageId":"86","endLine":29,"endColumn":14},{"ruleId":"83","severity":1,"message":"88","line":56,"column":7,"nodeType":"85","messageId":"86","endLine":56,"endColumn":11},{"ruleId":"83","severity":1,"message":"89","line":70,"column":7,"nodeType":"85","messageId":"86","endLine":70,"endColumn":13},{"ruleId":"83","severity":1,"message":"90","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"83","severity":1,"message":"91","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":17},{"ruleId":"83","severity":1,"message":"87","line":26,"column":7,"nodeType":"85","messageId":"86","endLine":26,"endColumn":14},{"ruleId":"83","severity":1,"message":"92","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":9,"column":11,"nodeType":"82","endLine":9,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":13,"column":11,"nodeType":"82","endLine":13,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":18,"column":11,"nodeType":"82","endLine":18,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":35,"column":9,"nodeType":"82","endLine":35,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":38,"column":9,"nodeType":"82","endLine":38,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":44,"column":9,"nodeType":"82","endLine":44,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":47,"column":9,"nodeType":"82","endLine":47,"endColumn":12},{"ruleId":"83","severity":1,"message":"93","line":108,"column":7,"nodeType":"85","messageId":"86","endLine":108,"endColumn":13},{"ruleId":"83","severity":1,"message":"94","line":118,"column":7,"nodeType":"85","messageId":"86","endLine":118,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":24,"column":13,"nodeType":"97","endLine":26,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":42,"column":19,"nodeType":"100","endLine":42,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":43,"column":19,"nodeType":"100","endLine":43,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":46,"column":19,"nodeType":"100","endLine":46,"endColumn":30},{"ruleId":"83","severity":1,"message":"101","line":6,"column":7,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":96,"column":27,"nodeType":"82","endLine":99,"endColumn":29},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Work' is assigned a value but never used.","Identifier","unusedVar","'Content' is assigned a value but never used.","'Join' is assigned a value but never used.","'SignIn' is assigned a value but never used.","'Leftside' is defined but never used.","'Rightside' is defined but never used.","'Identicon' is defined but never used.","'Avatar' is assigned a value but never used.","'Recommendation' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'PostWrapper' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]