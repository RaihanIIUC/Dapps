[{"G:\\item\\Dapps-Linkdin\\src\\index.js":"1","G:\\item\\Dapps-Linkdin\\src\\App.js":"2","G:\\item\\Dapps-Linkdin\\src\\components\\Home.js":"3","G:\\item\\Dapps-Linkdin\\src\\components\\Login.js":"4","G:\\item\\Dapps-Linkdin\\src\\components\\Header.js":"5","G:\\item\\Dapps-Linkdin\\src\\components\\MainFc.js":"6","G:\\item\\Dapps-Linkdin\\src\\components\\Main.js":"7","G:\\item\\Dapps-Linkdin\\src\\components\\Leftside.js":"8","G:\\item\\Dapps-Linkdin\\src\\components\\Rightside.js":"9","G:\\item\\Dapps-Linkdin\\src\\components\\Main\\MainFormFc.js":"10","G:\\item\\Dapps-Linkdin\\src\\components\\Main\\MainForm.js":"11","G:\\item\\Dapps-Linkdin\\src\\components\\Test.jsx":"12","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\index.js":"13","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\App.js":"14","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Header.js":"15","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Home.js":"16","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Login.js":"17","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Leftside.js":"18","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Main.js":"19","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Rightside.js":"20","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Main\\MainForm.js":"21","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\MyNetwork.jsx":"22","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Post.jsx":"23","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Login\\logged.jsx":"24"},{"size":483,"mtime":1633587355649,"results":"25","hashOfConfig":"26"},{"size":684,"mtime":1633587283747,"results":"27","hashOfConfig":"26"},{"size":1432,"mtime":1632896981310,"results":"28","hashOfConfig":"26"},{"size":3679,"mtime":1632896611341,"results":"29","hashOfConfig":"26"},{"size":5112,"mtime":1620242707000,"results":"30","hashOfConfig":"26"},{"size":4670,"mtime":1633586818352,"results":"31","hashOfConfig":"26"},{"size":4818,"mtime":1633502718663,"results":"32","hashOfConfig":"26"},{"size":4057,"mtime":1620242707000,"results":"33","hashOfConfig":"26"},{"size":2727,"mtime":1632896313199,"results":"34","hashOfConfig":"26"},{"size":2014,"mtime":1633502346680,"results":"35","hashOfConfig":"26"},{"size":4691,"mtime":1632912698187,"results":"36","hashOfConfig":"26"},{"size":146,"mtime":1633587283715,"results":"37","hashOfConfig":"26"},{"size":272,"mtime":1635660860668,"results":"38","hashOfConfig":"39"},{"size":700,"mtime":1637553165099,"results":"40","hashOfConfig":"39"},{"size":5210,"mtime":1636007049380,"results":"41","hashOfConfig":"39"},{"size":1401,"mtime":1633598151718,"results":"42","hashOfConfig":"39"},{"size":3720,"mtime":1636005174558,"results":"43","hashOfConfig":"39"},{"size":4060,"mtime":1636007106588,"results":"44","hashOfConfig":"39"},{"size":5029,"mtime":1636017614408,"results":"45","hashOfConfig":"39"},{"size":2884,"mtime":1636007090057,"results":"46","hashOfConfig":"39"},{"size":4774,"mtime":1636010247071,"results":"47","hashOfConfig":"39"},{"size":1380,"mtime":1637552553726,"results":"48","hashOfConfig":"39"},{"size":1337,"mtime":1635747352382,"results":"49","hashOfConfig":"39"},{"size":1357,"mtime":1637552449523,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ho7gx4",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"dfhrnc",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":1,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\item\\Dapps-Linkdin\\src\\index.js",[],"G:\\item\\Dapps-Linkdin\\src\\App.js",[],"G:\\item\\Dapps-Linkdin\\src\\components\\Home.js",["117","118"],"import styled from \"styled-components\";\nimport Leftside from \"./Leftside\";\nimport Main from \"./Main\";\nimport MainFc from \"./MainFc\";\n import Rightside from \"./Rightside\";\n\nconst Home = (props) => {\n  return (\n    <Container>\n      <Section>\n        \n      </Section>\n      <Layout>\n        <Leftside />\n        <Main />\n        <Rightside />\n      </Layout>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding-top: 52px;\n  max-width: 100%;\n  background-color: rgba(11, 226, 153, 0.56);\n  \n`;\n\nconst Content = styled.div`\n  max-width: 1128px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Section = styled.section`\n  min-height: 50px;\n  padding: 16px 0;\n  box-sizing: content-box;\n  text-align: center;\n  text-decoration: underline;\n  display: flex;\n  justify-content: center;\n  h5 {\n    color: #0a66c2;\n    font-size: 14px;\n    a {\n      font-weight: 700;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    color: #434649;\n    font-weight: 600;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-areas: \"leftside main rightside\";\n  grid-template-columns: minmax(0, 5fr) minmax(0, 12fr) minmax(300px, 7fr);\n  column-gap: 25px;\n  row-gap: 25px;\n  /* grid-template-row: auto; */\n  margin: 25px 0;\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nexport default Home;\n",["119","120"],"G:\\item\\Dapps-Linkdin\\src\\components\\Login.js",[],"G:\\item\\Dapps-Linkdin\\src\\components\\Header.js",["121","122","123","124","125","126","127","128"],"import styled from \"styled-components\";\n\nconst Header = (props) => {\n  return (\n    <Container>\n      <Content>\n        <Logo>\n          <a href=\"/home\">\n            <img src=\"/images/home-logo.svg\" alt=\"\" />\n          </a>\n        </Logo>\n        <Search>\n          <div>\n            <input type=\"text\" placeholder=\"Search\" />\n          </div>\n          <SearchIcon>\n            <img src=\"/images/search-icon.svg\" alt=\"\" />\n          </SearchIcon>\n        </Search>\n        <Nav>\n          <NavListWrap>\n            <NavList className=\"active\">\n              <a>\n                <img src=\"/images/nav-home.svg\" alt=\"\" />\n                <span>Home</span>\n              </a>\n            </NavList>\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-network.svg\" alt=\"\" />\n                <span>My Network</span>\n              </a>\n            </NavList>\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-jobs.svg\" alt=\"\" />\n                <span>Jobs</span>\n              </a>\n            </NavList>\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-messaging.svg\" alt=\"\" />\n                <span>Messaging</span>\n              </a>\n            </NavList>\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-notifications.svg\" alt=\"\" />\n                <span>Notifications</span>\n              </a>\n            </NavList>\n\n            <User>\n              <a>\n                <img src=\"/images/user.svg\" alt=\"\" />\n                <span>Me</span>\n                <img src=\"/images/down-icon.svg\" alt=\"\" />\n              </a>\n\n              <SignOut>\n                <a>Sign Out</a>\n              </SignOut>\n            </User>\n\n            <Work>\n              <a>\n                <img src=\"/images/nav-work.svg\" alt=\"\" />\n                <span>\n                  Work\n                  <img src=\"/images/down-icon.svg\" alt=\"\" />\n                </span>\n              </a>\n            </Work>\n          </NavListWrap>\n        </Nav>\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  background-color: white;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  left: 0;\n  padding: 0 24px;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: 100;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  min-height: 100%;\n  max-width: 1128px;\n`;\n\nconst Logo = styled.span`\n  margin-right: 8px;\n  font-size: 0px;\n`;\n\nconst Search = styled.div`\n  opacity: 1;\n  flex-grow: 1;\n  position: relative;\n  & > div {\n    max-width: 280px;\n    input {\n      border: none;\n      box-shadow: none;\n      background-color: #eef3f8;\n      border-radius: 2px;\n      color: rgba(0, 0, 0, 0.9);\n      width: 218px;\n      padding: 0 8px 0 40px;\n      line-height: 1.75;\n      font-weight: 400;\n      font-size: 14px;\n      height: 34px;\n      border-color: #dce6f1;\n      vertical-align: text-top;\n    }\n  }\n`;\n\nconst SearchIcon = styled.div`\n  width: 40px;\n  position: absolute;\n  z-index: 1;\n  top: 10px;\n  left: 2px;\n  border-radius: 0 2px 2px 0;\n  margin: 0;\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Nav = styled.nav`\n  margin-left: auto;\n  display: block;\n  @media (max-width: 768px) {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    background: white;\n    width: 100%;\n  }\n`;\n\nconst NavListWrap = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  list-style-type: none;\n\n  .active {\n    span:after {\n      content: \"\";\n      transform: scaleX(1);\n      border-bottom: 2px solid var(--white, #fff);\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      transition: transform 0.2s ease-in-out;\n      width: 100%;\n      border-color: rgba(0, 0, 0, 0.9);\n    }\n  }\n`;\n\nconst NavList = styled.li`\n  display: flex;\n  align-items: center;\n  a {\n    align-items: center;\n    background: transparent;\n    display: flex;\n    flex-direction: column;\n    font-size: 12px;\n    font-weight: 400;\n    justify-content: center;\n    line-height: 1.5;\n    min-height: 52px;\n    min-width: 80px;\n    position: relative;\n    text-decoration: none;\n\n    span {\n      color: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n    }\n\n    @media (max-width: 768px) {\n      min-width: 70px;\n    }\n  }\n\n  &:hover,\n  &:active {\n    a {\n      span {\n        color: rgba(0, 0, 0, 0.9);\n      }\n    }\n  }\n`;\n\nconst SignOut = styled.div`\n  position: absolute;\n  top: 45px;\n  background: white;\n  border-radius: 0 0 5px 5px;\n  width: 100px;\n  height: 40px;\n  font-size: 16px;\n  transition-duration: 167ms;\n  text-align: center;\n  display: none;\n`;\n\nconst User = styled(NavList)`\n  a > svg {\n    width: 24px;\n    border-radius: 50%;\n  }\n\n  a > img {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n  }\n\n  &:hover {\n    ${SignOut} {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n  }\n`;\n\nconst Work = styled(User)`\n  border-left: 1px solid rgba(0, 0, 0, 0.08);\n`;\n\nexport default Header;\n","G:\\item\\Dapps-Linkdin\\src\\components\\MainFc.js",[],"G:\\item\\Dapps-Linkdin\\src\\components\\Main.js",["129"],"import Decentragram from '../abis/Decentragram.json'\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n   import Web3 from 'web3';\n import MainForm from './Main/MainForm';\nimport styled from \"styled-components\";\nimport Header from './Header';\n  import \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\n\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass Main extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n     \n \n     await axios.get(\"http://localhost:8000/api/users/show_post\")\n       .then((res) => {\n         console.log(res, \"data\");\n       })\n       .catch((error) => {\n         console.log(error, \"datas error\");\n       });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = Decentragram.networks[networkId]\n    if(networkData) {\n      const decentragram = new web3.eth.Contract(Decentragram.abi, networkData.address)\n      this.setState({ decentragram })\n      const imagesCount = await decentragram.methods.imageCount().call()\n      this.setState({ imagesCount })\n      // Load images\n      for (var i = imagesCount  ; i >  0; i--) {\n        const image = await decentragram.methods.images(i).call()\n         this.setState({\n          images: [...this.state.images, image]\n        })\n      }\n      // Sort images. Show highest tipped images first\n      this.setState({\n        images: this.state.images.sort((a,b) => b.tipAmount - a.tipAmount )\n      })\n      this.setState({ loading: false})\n       \n \n    } else {\n      window.alert('Dapps contract not deployed to detected network.')\n    }\n  }\n\n  captureFile = event => {\n\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  uploadImage = description => {\n    console.log(\"Submitting file to ipfs...\")\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n\n      this.setState({ loading: true })\n      this.state.decentragram.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        window.location.reload();\n         this.setState({ loading: false })\n    \n      axios\n       .post(\"http://localhost:8000/api/users/add_post\", {\n         user_id: this.state.account,\n         title: description,\n         image: result[0].hash,\n       })\n       .then((response) => {\n         console.log(response, null);\n       })\n       .catch((error) => {\n         console.log(error, undefined, \"errro\");\n       });\n      })\n \n     \n    })\n    console.log('hello we are now in last part');\n\n  }\n\n  tipImageOwner(id, tipAmount) {\n    this.setState({ loading: true })\n    this.state.decentragram.methods.tipImageOwner(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      decentragram: null,\n      images: [],\n      loading: true\n    }\n\n    this.uploadImage = this.uploadImage.bind(this)\n    this.tipImageOwner = this.tipImageOwner.bind(this)\n    this.captureFile = this.captureFile.bind(this)\n  }\n\n\n   render() {\n     return (\n      <div>\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center mt-5\">\n            <p>Loading...</p>\n          </div>\n        ) : (\n          <Container>\n            <Header account={this.state.account} />\n            <MainForm\n              images={this.state.images}\n              captureFile={this.captureFile}\n              uploadImage={this.uploadImage}\n              tipImageOwner={this.tipImageOwner}\n            />\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\nconst Container = styled.div`\n  grid-area: main;\n`;\nexport default Main;\n\n \n","G:\\item\\Dapps-Linkdin\\src\\components\\Leftside.js",["130","131","132","133","134","135","136"],"import styled from \"styled-components\";\n\nconst Leftside = (props) => {\n  return (\n    <Container>\n      <ArtCard>\n        <UserInfo>\n          <CardBackground />\n          <a>\n            <Photo />\n            <Link>Welcome, there!</Link>\n          </a>\n          <a>\n            <AddPhotoText>Add a photo</AddPhotoText>\n          </a>\n        </UserInfo>\n        <Widget>\n          <a>\n            <div>\n              <span>Connections</span>\n              <span>Grow your network</span>\n            </div>\n            <img src=\"/images/widget-icon.svg\" alt=\"\" />\n          </a>\n        </Widget>\n        <Item>\n          <span>\n            <img src=\"/images/item-icon.svg\" alt=\"\" />\n            My Items\n          </span>\n        </Item>\n      </ArtCard>\n\n      <CommunityCard>\n        <a>\n          <span>Groups</span>\n        </a>\n        <a>\n          <span>\n            Events\n            <img src=\"/images/plus-icon.svg\" alt=\"\" />\n          </span>\n        </a>\n        <a>\n          <span>Follow Hashtags</span>\n        </a>\n        <a>\n          <span>Discover more</span>\n        </a>\n      </CommunityCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  grid-area: leftside;\n`;\n\nconst ArtCard = styled.div`\n  text-align: center;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background-color: #fff;\n  border-radius: 5px;\n  transition: box-shadow 83ms;\n  position: relative;\n  border: none;\n  box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 0 0 rgb(0 0 0 / 20%);\n`;\n\nconst UserInfo = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 12px 12px 16px;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n\nconst CardBackground = styled.div`\n  background: url(\"/images/card-bg.svg\");\n  background-position: center;\n  background-size: 462px;\n  height: 54px;\n  margin: -12px -12px 0;\n`;\n\nconst Photo = styled.div`\n  box-shadow: none;\n  background-image: url(\"/images/photo.svg\");\n  width: 72px;\n  height: 72px;\n  box-sizing: border-box;\n  background-clip: content-box;\n  background-color: white;\n  background-position: center;\n  background-size: 60%;\n  background-repeat: no-repeat;\n  border: 2px solid white;\n  margin: -38px auto 12px;\n  border-radius: 50%;\n`;\n\nconst Link = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(0, 0, 0, 0.9);\n  font-weight: 600;\n`;\n\nconst AddPhotoText = styled.div`\n  color: #0a66c2;\n  margin-top: 4px;\n  font-size: 12px;\n  line-height: 1.33;\n  font-weight: 400;\n`;\n\nconst Widget = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  & > a {\n    text-decoration: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 4px 12px;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.08);\n    }\n\n    div {\n      display: flex;\n      flex-direction: column;\n      text-align: left;\n      span {\n        font-size: 12px;\n        line-height: 1.333;\n        &:first-child {\n          color: rgba(0, 0, 0, 0.6);\n        }\n        &:nth-child(2) {\n          color: rgba(0, 0, 0, 1);\n        }\n      }\n    }\n  }\n\n  svg {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n\nconst Item = styled.a`\n  border-color: rgba(0, 0, 0, 0.8);\n  text-align: left;\n  padding: 12px;\n  font-size: 12px;\n  display: block;\n  span {\n    display: flex;\n    align-items: center;\n    color: rgba(0, 0, 0, 1);\n    svg {\n      color: rgba(0, 0, 0, 0.6);\n    }\n  }\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst CommunityCard = styled(ArtCard)`\n  padding: 8px 0 0;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  a {\n    color: black;\n    padding: 4px 12px 4px 12px;\n    font-size: 12px;\n\n    &:hover {\n      color: #0a66c2;\n    }\n\n    span {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    &:last-child {\n      color: rgba(0, 0, 0, 0.6);\n      text-decoration: none;\n\n      border-top: 1px solid #d6cec2;\n      padding: 12px;\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.08);\n      }\n    }\n  }\n`;\n\nexport default Leftside;\n","G:\\item\\Dapps-Linkdin\\src\\components\\Rightside.js",["137","138"],"import styled from \"styled-components\";\n\nconst Rightside = (props) => {\n  return (\n    <Container>\n      <FollowCard>\n        <Title>\n          <h2>Add to your feed</h2>\n          <img src=\"/images/feed-icon.svg\" alt=\"\" />\n        </Title>\n\n        <FeedList>\n          <li>\n            <a>\n              <Avatar />\n            </a>\n            <div>\n              <span>#Linkedin</span>\n              <button>Follow</button>\n            </div>\n          </li>\n          <li>\n            <a>\n              <Avatar />\n            </a>\n            <div>\n              <span>#Video</span>\n              <button>Follow</button>\n            </div>\n          </li>\n        </FeedList>\n\n        <Recommendation>\n          View all recommendations\n          <img src=\"/images/right-icon.svg\" alt=\"\" />\n        </Recommendation>\n      </FollowCard>\n      <BannerCard>\n        <img\n          src=\"https://static-exp1.licdn.com/scds/common/u/images/promo/ads/li_evergreen_jobs_ad_300x250_v1.jpg\"\n          alt=\"\"\n        />\n      </BannerCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  grid-area: rightside;\n`;\n\nconst FollowCard = styled.div`\n  text-align: center;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background-color: #fff;\n  border-radius: 5px;\n  position: relative;\n  border: none;\n  box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 0 0 rgb(0 0 0 / 20%);\n  padding: 12px;\n`;\n\nconst Title = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  width: 100%;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst FeedList = styled.ul`\n  margin-top: 16px;\n  li {\n    display: flex;\n    align-items: center;\n    margin: 12px 0;\n    position: relative;\n    font-size: 14px;\n    & > div {\n      display: flex;\n      flex-direction: column;\n    }\n\n    button {\n      background-color: transparent;\n      color: rgba(0, 0, 0, 0.6);\n      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.6);\n      padding: 16px;\n      align-items: center;\n      border-radius: 15px;\n      box-sizing: border-box;\n      font-weight: 600;\n      display: inline-flex;\n      justify-content: center;\n      max-height: 32px;\n      max-width: 480px;\n      text-align: center;\n      outline: none;\n    }\n  }\n`;\n\nconst Avatar = styled.div`\n  background-image: url(\"https://static-exp1.licdn.com/sc/h/1b4vl1r54ijmrmcyxzoidwmxs\");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 48px;\n  height: 48px;\n  margin-right: 8px;\n`;\n\nconst Recommendation = styled.a`\n  color: #0a66c2;\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\n\nconst BannerCard = styled(FollowCard)`\n  img {\n    width: 100%;\n    height: 100%;\n    \n  }\n`;\n\nexport default Rightside;\n","G:\\item\\Dapps-Linkdin\\src\\components\\Main\\MainFormFc.js",["139","140"],"import React, { Component, useRef } from \"react\";\r\nimport Identicon from \"identicon.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst MainFormFc = (props ) => {\r\n  console.log(props,NaN,' ');\r\n  const inputEl = useRef(null);\r\n     return (\r\n       <div className=\"container-fluid mt-5\">\r\n         <div className=\"row\">\r\n           <main\r\n             role=\"main\"\r\n             className=\"col-lg-12 ml-auto mr-auto\"\r\n             style={{ maxWidth: \"500px\" }}\r\n           >\r\n             <div className=\"content mr-auto ml-auto\">\r\n               <p>&nbsp;</p>\r\n               <h2>Share Post</h2>\r\n               <form\r\n                 onSubmit={(event) => {\r\n                   event.preventDefault();\r\n                   const description = inputEl.current.focus();\r\n                   props.uploadImage(description);\r\n                 }}\r\n               >\r\n                 <input\r\n                   type=\"file\"\r\n                   accept=\".jpg, .jpeg, .png, .bmp, .gif\"\r\n                   onChange={props.captureFile}\r\n                 />\r\n                 <div className=\"form-group mr-sm-2\">\r\n                   <br></br>\r\n                   <input\r\n                     id=\"imageDescription\"\r\n                     type=\"text\"\r\n                     ref={inputEl}\r\n                     className=\"form-control\"\r\n                     placeholder=\"Image description...\"\r\n                     required\r\n                   />\r\n                 </div>\r\n                 <button\r\n                   type=\"submit\"\r\n                   className=\"btn btn-primary btn-block btn-lg\"\r\n                 >\r\n                   Post\r\n                 </button>\r\n               </form>\r\n               <p>&nbsp;</p>\r\n            \r\n             </div>\r\n           </main>\r\n         </div>\r\n       </div>\r\n     );\r\n  }\r\n\r\nexport default MainFormFc;\r\n",["141","142"],"G:\\item\\Dapps-Linkdin\\src\\components\\Main\\MainForm.js",["143"],"import React, { Component } from \"react\";\r\nimport Identicon from \"identicon.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst PostWrapper = styled.div`\r\n \r\n`;\r\nclass MainForm extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <main\r\n            role=\"main\"\r\n            className=\"col-lg-12 ml-auto mr-auto\"\r\n            style={{ maxWidth: \"500px\" }}\r\n          >\r\n            <div className=\"content mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n              <h2>Share Post</h2>\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault();\r\n                  const description = this.imageDescription.value;\r\n                  this.props.uploadImage(description);\r\n                }}\r\n              >\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".jpg, .jpeg, .png, .bmp, .gif\"\r\n                  onChange={this.props.captureFile}\r\n                />\r\n                <div className=\"form-group mr-sm-2\">\r\n                  <br></br>\r\n                  <input\r\n                    id=\"imageDescription\"\r\n                    type=\"text\"\r\n                    ref={(input) => {\r\n                      this.imageDescription = input;\r\n                    }}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Image description...\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block btn-lg\"\r\n                >\r\n                  Post \r\n                </button>\r\n              </form>\r\n              <p>&nbsp;</p>\r\n              {this.props.images.map((image, key) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                    }}\r\n                    className=\"card mb-4\"\r\n                    key={key}\r\n                  >\r\n                    <div className=\"card-header\">\r\n                      <img\r\n                        className=\"mr-2\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        src={`data:image/png;base64,${new Identicon(\r\n                          image.author,\r\n                          30\r\n                        ).toString()}`}\r\n                        alt=\"helo\"\r\n                      />\r\n                      <small className=\"text-muted\">{image.author}</small>\r\n                    </div>\r\n                    <ul id=\"imageList\"  style={{\r\n                      backgroundColor: \"red\",\r\n                    }} className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <p>{image.description}</p>\r\n                        <p className=\"text-center\">\r\n                          <img\r\n                            src={`https://ipfs.infura.io/ipfs/${image.hash}`}\r\n                            style={{ maxWidth: \"420px\" }}\r\n                            alt=\"helo\"\r\n                          />\r\n                        </p>\r\n                      </li>\r\n                      <li key={key} className=\"list-group-item py-2\">\r\n                        <small className=\"float-left mt-1 text-muted\">\r\n                          TIPS:{\" \"}\r\n                          {window.web3.utils.fromWei(\r\n                            image.tipAmount.toString(),\r\n                            \"Ether\"\r\n                          )}{\" \"}\r\n                          ETH\r\n                        </small>\r\n                        <button\r\n                          className=\"btn btn-link btn-sm float-right pt-0\"\r\n                          name={image.id}\r\n                          onClick={(event) => {\r\n                            let tipAmount = window.web3.utils.toWei(\r\n                              \"0.1\",\r\n                              \"Ether\"\r\n                            );\r\n                            console.log(event.target.name, tipAmount);\r\n                            this.props.tipImageOwner(\r\n                              event.target.name,\r\n                              tipAmount\r\n                            );\r\n                          }}\r\n                        >\r\n                          TIP 0.1 ETH\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainForm;\r\n","G:\\item\\Dapps-Linkdin\\src\\components\\Test.jsx",[],"G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\index.js",[],["144","145"],"G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\App.js",[],"G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Header.js",["146","147","148","149"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Header = (props) => {\n  return (\n    <Container>\n      <Content>\n        <Logo>\n          <a href=\"/home\">\n            <img src=\"/images/home-logo.svg\" alt=\"\" />\n          </a>\n        </Logo>\n        <Search>\n          <div>\n            <input type=\"text\" placeholder=\"Search\" />\n          </div>\n          <SearchIcon>\n            <img src=\"/images/search-icon.svg\" alt=\"\" />\n          </SearchIcon>\n        </Search>\n        <Nav>\n          <NavListWrap>\n            <NavList className=\"active\">\n              <Link to=\"home\">\n                <img src=\"/images/nav-home.svg\" alt=\"\" />\n                <span>Home</span>\n              </Link>\n            </NavList>\n\n            <NavList>\n              <Link to=\"my-network\">\n                <img src=\"/images/nav-network.svg\" alt=\"\" />\n                <span>My Network</span>\n              </Link>\n            </NavList>\n{/* \n            <NavList>\n              <a>\n                <img src=\"/images/nav-jobs.svg\" alt=\"\" />\n                <span>Jobs</span>\n              </a>\n            </NavList>\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-messaging.svg\" alt=\"\" />\n                <span>Messaging</span>\n              </a>\n            </NavList> */}\n\n            <NavList>\n              <a>\n                <img src=\"/images/nav-notifications.svg\" alt=\"\" />\n                <span>Notifications</span>\n              </a>\n            </NavList>\n\n            <User>\n              <a>\n                <img src=\"/images/user.svg\" alt=\"\" />\n                <span>Me</span>\n                <img src=\"/images/down-icon.svg\" alt=\"\" />\n              </a>\n\n              <SignOut>\n                <a>Sign Out</a>\n              </SignOut>\n            </User>\n\n            {/* <Work>\n              <a>\n                <img src=\"/images/nav-work.svg\" alt=\"\" />\n                <span>\n                  Work\n                  <img src=\"/images/down-icon.svg\" alt=\"\" />\n                </span>\n              </a>\n            </Work> */}\n          </NavListWrap>\n        </Nav>\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  background-color: #803a0a;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  left: 0;\n  padding: 0 24px;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: 100;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  min-height: 100%;\n  max-width: 1128px;\n`;\n\nconst Logo = styled.span`\n  margin-right: 8px;\n  font-size: 0px;\n`;\n\nconst Search = styled.div`\n  opacity: 1;\n  flex-grow: 1;\n  position: relative;\n  & > div {\n    max-width: 280px;\n    input {\n      border: none;\n      box-shadow: none;\n      background-color: #eef3f8;\n      border-radius: 2px;\n      color: rgba(0, 0, 0, 0.9);\n      width: 218px;\n      padding: 0 8px 0 40px;\n      line-height: 1.75;\n      font-weight: 400;\n      font-size: 14px;\n      height: 34px;\n      border-color: #dce6f1;\n      vertical-align: text-top;\n    }\n  }\n`;\n\nconst SearchIcon = styled.div`\n  width: 40px;\n  position: absolute;\n  z-index: 1;\n  top: 10px;\n  left: 2px;\n  border-radius: 0 2px 2px 0;\n  margin: 0;\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Nav = styled.nav`\n  margin-left: auto;\n  display: block;\n  @media (max-width: 768px) {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    background: white;\n    width: 100%;\n  }\n`;\n\nconst NavListWrap = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  list-style-type: none;\n\n  .active {\n    span:after {\n      content: \"\";\n      transform: scaleX(1);\n      border-bottom: 2px solid var(--white, #fff);\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      transition: transform 0.2s ease-in-out;\n      width: 100%;\n      border-color: rgba(0, 0, 0, 0.9);\n    }\n  }\n`;\n\nconst NavList = styled.li`\n  display: flex;\n  align-items: center;\n  a {\n    align-items: center;\n    background: transparent;\n    display: flex;\n    flex-direction: column;\n    font-size: 12px;\n    font-weight: 400;\n    justify-content: center;\n    line-height: 1.5;\n    min-height: 52px;\n    min-width: 80px;\n    position: relative;\n    text-decoration: none;\n\n    span {\n      color: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n    }\n\n    @media (max-width: 768px) {\n      min-width: 70px;\n    }\n  }\n\n  &:hover,\n  &:active {\n    a {\n      span {\n        color: rgba(0, 0, 0, 0.9);\n      }\n    }\n  }\n`;\n\nconst SignOut = styled.div`\n  position: absolute;\n  top: 45px;\n  background: white;\n  border-radius: 0 0 5px 5px;\n  width: 100px;\n  height: 40px;\n  font-size: 16px;\n  transition-duration: 167ms;\n  text-align: center;\n  display: none;\n`;\n\nconst User = styled(NavList)`\n  a > svg {\n    width: 24px;\n    border-radius: 50%;\n  }\n\n  a > img {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n  }\n\n  &:hover {\n    ${SignOut} {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n  }\n`;\n\nconst Work = styled(User)`\n  border-left: 1px solid rgba(0, 0, 0, 0.08);\n`;\n\nexport default Header;\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Home.js",["150"],"import styled from \"styled-components\";\nimport Leftside from \"./Leftside\";\nimport Main from \"./Main\";\n\nimport Rightside from \"./Rightside\";\n\nconst Home = (props) => {\n  return (\n    <Container>\n      <Section>\n        \n      </Section>\n      <Layout>\n        <Leftside />\n        <Main />\n        <Rightside />\n      </Layout>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding-top: 52px;\n  max-width: 100%;\n  background-color: rgba(11, 226, 153, 0.56);\n  \n`;\n\nconst Content = styled.div`\n  max-width: 1128px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Section = styled.section`\n  min-height: 50px;\n  padding: 16px 0;\n  box-sizing: content-box;\n  text-align: center;\n  text-decoration: underline;\n  display: flex;\n  justify-content: center;\n  h5 {\n    color: #0a66c2;\n    font-size: 14px;\n    a {\n      font-weight: 700;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    color: #434649;\n    font-weight: 600;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-areas: \"leftside main rightside\";\n  grid-template-columns: minmax(0, 5fr) minmax(0, 12fr) minmax(300px, 7fr);\n  column-gap: 25px;\n  row-gap: 25px;\n  /* grid-template-row: auto; */\n  margin: 25px 0;\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nexport default Home;\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Login.js",[],"G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Leftside.js",["151","152","153","154","155","156","157"],"import styled from \"styled-components\";\n\nconst Leftside = (props) => {\n  return (\n    <Container>\n      <ArtCard>\n        <UserInfo>\n          <CardBackground />\n          <a>\n            <Photo />\n            <Link>Welcome, there!</Link>\n          </a>\n          <a>\n            <AddPhotoText>Add a photo</AddPhotoText>\n          </a>\n        </UserInfo>\n        <Widget>\n          <a>\n            <div>\n              <span>Connections</span>\n              <span>Grow your network</span>\n            </div>\n            <img src=\"/images/widget-icon.svg\" alt=\"\" />\n          </a>\n        </Widget>\n        <Item>\n          <span>\n            <img src=\"/images/item-icon.svg\" alt=\"\" />\n            My Items\n          </span>\n        </Item>\n      </ArtCard>\n\n      <CommunityCard>\n        <a>\n          <span>Groups</span>\n        </a>\n        <a>\n          <span>\n            Events\n            <img src=\"/images/plus-icon.svg\" alt=\"\" />\n          </span>\n        </a>\n        <a>\n          <span>Follow Hashtags</span>\n        </a>\n        <a>\n          <span>Discover more</span>\n        </a>\n      </CommunityCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  grid-area: leftside;\n`;\n\nconst ArtCard = styled.div`\n  text-align: center;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background-color: #803a0a;\n  border-radius: 5px;\n  transition: box-shadow 83ms;\n  position: relative;\n  border: none;\n  box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 0 0 rgb(0 0 0 / 20%);\n`;\n\nconst UserInfo = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 12px 12px 16px;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n\nconst CardBackground = styled.div`\n  background: url(\"/images/card-bg.svg\");\n  background-position: center;\n  background-size: 462px;\n  height: 54px;\n  margin: -12px -12px 0;\n`;\n\nconst Photo = styled.div`\n  box-shadow: none;\n  background-image: url(\"/images/photo.svg\");\n  width: 72px;\n  height: 72px;\n  box-sizing: border-box;\n  background-clip: content-box;\n  background-color: white;\n  background-position: center;\n  background-size: 60%;\n  background-repeat: no-repeat;\n  border: 2px solid white;\n  margin: -38px auto 12px;\n  border-radius: 50%;\n`;\n\nconst Link = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n  color: rgba(0, 0, 0, 0.9);\n  font-weight: 600;\n`;\n\nconst AddPhotoText = styled.div`\n  color: #0a66c2;\n  margin-top: 4px;\n  font-size: 12px;\n  line-height: 1.33;\n  font-weight: 400;\n`;\n\nconst Widget = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  & > a {\n    text-decoration: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 4px 12px;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.08);\n    }\n\n    div {\n      display: flex;\n      flex-direction: column;\n      text-align: left;\n      span {\n        font-size: 12px;\n        line-height: 1.333;\n        &:first-child {\n          color: rgba(0, 0, 0, 0.6);\n        }\n        &:nth-child(2) {\n          color: rgba(0, 0, 0, 1);\n        }\n      }\n    }\n  }\n\n  svg {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n\nconst Item = styled.a`\n  border-color: rgba(0, 0, 0, 0.8);\n  text-align: left;\n  padding: 12px;\n  font-size: 12px;\n  display: block;\n  span {\n    display: flex;\n    align-items: center;\n    color: rgba(0, 0, 0, 1);\n    svg {\n      color: rgba(0, 0, 0, 0.6);\n    }\n  }\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst CommunityCard = styled(ArtCard)`\n  padding: 8px 0 0;\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  a {\n    color: black;\n    padding: 4px 12px 4px 12px;\n    font-size: 12px;\n\n    &:hover {\n      color: #0a66c2;\n    }\n\n    span {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    &:last-child {\n      color: rgba(0, 0, 0, 0.6);\n      text-decoration: none;\n\n      border-top: 1px solid #d6cec2;\n      padding: 12px;\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.08);\n      }\n    }\n  }\n`;\n\nexport default Leftside;\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Main.js",["158"],"import Decentragram from '../abis/Decentragram.json'\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n   import Web3 from 'web3';\n import MainForm from './Main/MainForm';\nimport styled from \"styled-components\";\nimport Header from './Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\n\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass Main extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n\n    await axios\n      .get(\"http://localhost:8000/api/users/show_post\")\n      .then((posts) => {\n        const { data } = posts;\n        console.log(data, \"data\");\n      })\n      .catch((error) => {\n        console.log(error, \"datas error\");\n      });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    // Load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    // Network ID\n    const networkId = await web3.eth.net.getId();\n    const networkData = Decentragram.networks[networkId];\n    if (networkData) {\n      const decentragram = new web3.eth.Contract(\n        Decentragram.abi,\n        networkData.address\n      );\n      this.setState({ decentragram });\n      const imagesCount = await decentragram.methods.imageCount().call();\n      this.setState({ imagesCount });\n      // Load images\n      for (var i = imagesCount; i > 0; i--) {\n        const image = await decentragram.methods.images(i).call();\n        this.setState({\n          images: [...this.state.images, image],\n        });\n      }\n      // Sort images. Show highest tipped images first\n      this.setState({\n        images: this.state.images.sort((a, b) => b.tipAmount - a.tipAmount),\n      });\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Dapps contract not deployed to detected network.\");\n    }\n  }\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) });\n      console.log(\"buffer\", this.state.buffer);\n    };\n  };\n\n  async uploadImage(description) {\n    console.log(\"Submitting file to ipfs...\");\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log(\"Ipfs result\", result);\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      this.setState({ loading: true });\n      this.state.decentragram.methods\n        .uploadImage(result[0].hash, description)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          // window.location.reload();\n          this.setState({ loading: false });\n\n          axios\n            .post(\"http://localhost:8000/api/users/add_post\", {\n              user_id: this.state.account,\n              title: description,\n              image: result[0].hash,\n            })\n            .then((response) => {\n              console.log(response, null);\n            })\n            .catch((error) => {\n              console.log(error, undefined, \"errro\");\n            });\n \n        });\n\n \n    });\n      \n    console.log(\"hello we are now in last part\");\n  }\n\n  tipImageOwner(id, tipAmount) {\n    this.setState({ loading: true });\n    this.state.decentragram.methods\n      .tipImageOwner(id)\n      .send({ from: this.state.account, value: tipAmount })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      decentragram: null,\n      images: [],\n      loading: true,\n    };\n\n    this.uploadImage = this.uploadImage.bind(this);\n    this.tipImageOwner = this.tipImageOwner.bind(this);\n    this.captureFile = this.captureFile.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div id=\"loader\" className=\"text-center mt-5\">\n            <p>Loading...</p>\n          </div>\n        ) : (\n          <Container>\n            <Header account={this.state.account} />\n            <MainForm\n              images={this.state.images}\n              captureFile={this.captureFile}\n              uploadImage={this.uploadImage}\n              tipImageOwner={this.tipImageOwner}\n            />\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\nconst Container = styled.div`\n  grid-area: main;\n`;\nexport default Main;\n\n \n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Rightside.js",["159","160"],"import styled from \"styled-components\";\n\nconst Rightside = (props) => {\n  return (\n    <Container>\n      <FollowCard>\n        <Title>\n          <h2>Add to your feed</h2>\n          {/* <img src=\"/images/feed-icon.svg\" alt=\"\" /> */}\n        </Title>\n\n        <FeedList>\n          <img src=\"/images/right_icons.png\" alt=\"\" width=\"300px\" />\n\n          {/* <li>\n            <a>\n              <Avatar />\n            </a>\n            <div>\n              <span>#Linkedin</span>\n              <button>Follow</button>\n            </div>\n          </li>\n          <li>\n            <a>\n              <Avatar />\n            </a>\n            <div>\n              <span>#Video</span>\n              <button>Follow</button>\n            </div>\n          </li> */}\n        </FeedList>\n\n        {/* <Recommendation>\n          View all recommendations\n          <img src=\"/images/right-icon.svg\" alt=\"\" />\n        </Recommendation> */}\n      </FollowCard>\n      <BannerCard>\n        <img src=\"/images/bannerCard.png\" alt=\"\" />\n        {/* <img\n          src=\"https://static-exp1.licdn.com/scds/common/u/images/promo/ads/li_evergreen_jobs_ad_300x250_v1.jpg\"\n          alt=\"\"\n        /> */}\n      </BannerCard>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  grid-area: rightside;\n`;\n\nconst FollowCard = styled.div`\n  text-align: center;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background-color: #803a0a;\n  border-radius: 5px;\n  position: relative;\n  border: none;\n  box-shadow: 0 0 0 1px rgb(0 0 0 / 15%), 0 0 0 rgb(0 0 0 / 20%);\n  padding: 12px;\n`;\n\nconst Title = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  width: 100%;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nconst FeedList = styled.ul`\n  margin-top: 16px;\n  li {\n    display: flex;\n    align-items: center;\n    margin: 12px 0;\n    position: relative;\n    font-size: 14px;\n    & > div {\n      display: flex;\n      flex-direction: column;\n    }\n\n    button {\n      background-color: transparent;\n      color: rgba(0, 0, 0, 0.6);\n      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.6);\n      padding: 16px;\n      align-items: center;\n      border-radius: 15px;\n      box-sizing: border-box;\n      font-weight: 600;\n      display: inline-flex;\n      justify-content: center;\n      max-height: 32px;\n      max-width: 480px;\n      text-align: center;\n      outline: none;\n    }\n  }\n`;\n\nconst Avatar = styled.div`\n  background-image: url(\"https://static-exp1.licdn.com/sc/h/1b4vl1r54ijmrmcyxzoidwmxs\");\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 48px;\n  height: 48px;\n  margin-right: 8px;\n`;\n\nconst Recommendation = styled.a`\n  color: #0a66c2;\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n`;\n\nconst BannerCard = styled(FollowCard)`\n  img {\n    width: 100%;\n    height: 100%;\n    \n  }\n`;\n\nexport default Rightside;\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Main\\MainForm.js",["161","162"],"import React, { Component } from \"react\";\r\nimport Identicon from \"identicon.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PostWrapper = styled.div``;\r\nclass MainForm extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <main\r\n            role=\"main\"\r\n            className=\"col-lg-12 ml-auto mr-auto\"\r\n            style={{ maxWidth: \"500px\" }}\r\n          >\r\n            <div className=\"content mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n              <h2>Share Post</h2>\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault();\r\n                  const description = this.imageDescription.value;\r\n                  this.props.uploadImage(description);\r\n                }}\r\n              >\r\n                <input\r\n                  style={{\r\n                    backgroundColor: \"#803A0A\",\r\n                  }}\r\n                  type=\"file\"\r\n                  accept=\".jpg, .jpeg, .png, .bmp, .gif\"\r\n                  onChange={this.props.captureFile}\r\n                />\r\n                <div className=\"form-group mr-sm-2\">\r\n                  <br></br>\r\n                  <input\r\n                    // style={{\r\n                    //   backgroundColor: \"#803A0A\",\r\n                    // }}\r\n                    id=\"imageDescription\"\r\n                    type=\"text\"\r\n                    ref={(input) => {\r\n                      this.imageDescription = input;\r\n                    }}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Image description...\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block btn-lg\"\r\n                >\r\n                  Post\r\n                </button>\r\n              </form>\r\n              <p>&nbsp;</p>\r\n              {this.props.images.map((image, key) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"red\",\r\n                    }}\r\n                    className=\"card mb-4\"\r\n                    key={key}\r\n                  >\r\n                    <div\r\n                      className=\"card-header\"\r\n                      style={{\r\n                        backgroundColor: \"#803A0A\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className=\"mr-2\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        src={`data:image/png;base64,${new Identicon(\r\n                          image.author,\r\n                          30\r\n                        ).toString()}`}\r\n                        alt=\"helo\"\r\n                      />\r\n                      <small className=\"text-muted\">{image.author}</small>\r\n                    </div>\r\n\r\n                    <ul\r\n                      id=\"imageList\"\r\n                      // style={{\r\n                      //   backgroundColor: \"red\",\r\n                      // }}\r\n                      className=\"list-group list-group-flush\"\r\n                    >\r\n                      <li className=\"list-group-item\">\r\n                        <p class=\"text-center\">\r\n                          <img\r\n                            src={`https://ipfs.infura.io/ipfs/${image.hash}`}\r\n                            style={{ maxWidth: \"420px\" }}\r\n                          />\r\n                        </p>\r\n                        <p>{image.description}</p>\r\n                      </li>\r\n                       <li key={key} className=\"list-group-item py-2\">\r\n                        <small className=\"float-left mt-1 text-muted\">\r\n                          TIPS: {window.web3.utils.fromWei(image.tipAmount.toString(), 'Ether')} ETH\r\n                        </small>\r\n                        <button\r\n                          className=\"btn btn-link btn-sm float-right pt-0\"\r\n                          name={image.id}\r\n                          onClick={(event) => {\r\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\r\n                            console.log(event.target.name, tipAmount)\r\n                            this.props.tipImageOwner(event.target.name, tipAmount)\r\n                          }}\r\n                        >\r\n                          TIP 0.1 ETH\r\n                        </button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainForm;\r\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\MyNetwork.jsx",["163","164"],"import styled from \"styled-components\";\nimport Leftside from \"./Leftside\";\nimport Post from \"./Post\";\n \nimport Rightside from \"./Rightside\";\n \nconst MyNetwork = (props) => {\n  return (\n    <Container>\n      <Section />       \n \n      <Layout>\n        <Leftside />\n         <Post />\n       </Layout>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding-top: 52px;\n  max-width: 100%;\n  background-color: rgba(11, 226, 153, 0.56);\n  \n`;\n\nconst Content = styled.div`\n  max-width: 1128px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Section = styled.section`\n  min-height: 50px;\n   padding: 16px 0;\n  box-sizing: content-box;\n  text-align: center;\n  text-decoration: underline;\n  display: flex;\n  justify-content: center;\n  h5 {\n    color: #0a66c2;\n    font-size: 14px;\n    a {\n      font-weight: 700;\n    }\n  }\n\n  p {\n    font-size: 14px;\n    color: #434649;\n    font-weight: 600;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nconst Layout = styled.div`\n  display: grid;\n  grid-template-areas: \"leftside main rightside\";\n  grid-template-columns: minmax(0, 5fr) minmax(0, 25fr) minmax(30px, 2fr);\n  column-gap: 25px;\n  row-gap: 25px;\n \n  /* grid-template-row: auto; */\n  margin: 25px 0;\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    padding: 0 5px;\n  }\n`;\n\nexport default MyNetwork;\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Post.jsx",["165","166","167","168"],"import React,  { useEffect, useState } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport Moment from \"react-moment\";\nfunction Post() {\nconst [posts, setPosts] = useState([]);\n//  posts?.map((post) => {\n//    console.log(post,NaN, ' ');\n//   })\nconst getData = async () => {\n  await axios\n    .get(\"http://localhost:8000/api/users/show_post\")\n    .then((res) => {\n      const { data } = res;\n      setPosts(data);\n    })\n    .catch((error) => {\n      console.log(error, \"datas error\");\n    });\n};\n  useEffect( async () => {\n       await getData();\n  }, []);\n  return (\n    <div >\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">user</th>\n            <th scope=\"col\">title</th>\n            <th scope=\"col\">image</th>\n            <th scope=\"col\">created at</th>\n          </tr>\n        </thead>\n        <tbody>\n          {posts?.map((post, index) => (\n            <tr key={index}>\n              <th scope=\"row\">{post.user_id}</th>\n              <td scope=\"row\">{post.title}</td>\n              <td scope=\"row\">{post.image}</td>\n              <td scope=\"row\">\n                <Moment fromNow>{post.created_at}</Moment>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default Post\n","G:\\Dapps-Linkdin\\Linkdin-Dapps\\src\\components\\Login\\logged.jsx",["169","170","171","172","173","174","175"],{"ruleId":"176","severity":1,"message":"177","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":14},{"ruleId":"176","severity":1,"message":"180","line":29,"column":7,"nodeType":"178","messageId":"179","endLine":29,"endColumn":14},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":23,"column":15,"nodeType":"187","endLine":23,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":30,"column":15,"nodeType":"187","endLine":30,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":37,"column":15,"nodeType":"187","endLine":37,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":44,"column":15,"nodeType":"187","endLine":44,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":51,"column":15,"nodeType":"187","endLine":51,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":58,"column":15,"nodeType":"187","endLine":58,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":65,"column":17,"nodeType":"187","endLine":65,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":70,"column":15,"nodeType":"187","endLine":70,"endColumn":18},{"ruleId":"176","severity":1,"message":"188","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":9,"column":11,"nodeType":"187","endLine":9,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":13,"column":11,"nodeType":"187","endLine":13,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":18,"column":11,"nodeType":"187","endLine":18,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":35,"column":9,"nodeType":"187","endLine":35,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":38,"column":9,"nodeType":"187","endLine":38,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":44,"column":9,"nodeType":"187","endLine":44,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":47,"column":9,"nodeType":"187","endLine":47,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":14,"column":13,"nodeType":"187","endLine":14,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":23,"column":13,"nodeType":"187","endLine":23,"endColumn":16},{"ruleId":"176","severity":1,"message":"189","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"188","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"181","replacedBy":"190"},{"ruleId":"183","replacedBy":"191"},{"ruleId":"176","severity":1,"message":"192","line":7,"column":7,"nodeType":"178","messageId":"179","endLine":7,"endColumn":18},{"ruleId":"181","replacedBy":"193"},{"ruleId":"183","replacedBy":"194"},{"ruleId":"185","severity":1,"message":"186","line":53,"column":15,"nodeType":"187","endLine":53,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":60,"column":15,"nodeType":"187","endLine":60,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":67,"column":17,"nodeType":"187","endLine":67,"endColumn":20},{"ruleId":"176","severity":1,"message":"195","line":258,"column":7,"nodeType":"178","messageId":"179","endLine":258,"endColumn":11},{"ruleId":"176","severity":1,"message":"180","line":29,"column":7,"nodeType":"178","messageId":"179","endLine":29,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":9,"column":11,"nodeType":"187","endLine":9,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":13,"column":11,"nodeType":"187","endLine":13,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":18,"column":11,"nodeType":"187","endLine":18,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":35,"column":9,"nodeType":"187","endLine":35,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":38,"column":9,"nodeType":"187","endLine":38,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":44,"column":9,"nodeType":"187","endLine":44,"endColumn":12},{"ruleId":"185","severity":1,"message":"186","line":47,"column":9,"nodeType":"187","endLine":47,"endColumn":12},{"ruleId":"176","severity":1,"message":"188","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":17},{"ruleId":"176","severity":1,"message":"196","line":108,"column":7,"nodeType":"178","messageId":"179","endLine":108,"endColumn":13},{"ruleId":"176","severity":1,"message":"197","line":118,"column":7,"nodeType":"178","messageId":"179","endLine":118,"endColumn":21},{"ruleId":"176","severity":1,"message":"192","line":6,"column":7,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":96,"column":27,"nodeType":"187","endLine":99,"endColumn":29},{"ruleId":"176","severity":1,"message":"200","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":17},{"ruleId":"176","severity":1,"message":"180","line":27,"column":7,"nodeType":"178","messageId":"179","endLine":27,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":21,"column":14,"nodeType":"203","endLine":23,"endColumn":4},{"ruleId":"204","severity":1,"message":"205","line":39,"column":19,"nodeType":"206","endLine":39,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":40,"column":19,"nodeType":"206","endLine":40,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":41,"column":19,"nodeType":"206","endLine":41,"endColumn":30},{"ruleId":"176","severity":1,"message":"207","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"208","line":4,"column":7,"nodeType":"178","messageId":"179","endLine":4,"endColumn":15},{"ruleId":"176","severity":1,"message":"209","line":16,"column":7,"nodeType":"178","messageId":"179","endLine":16,"endColumn":16},{"ruleId":"176","severity":1,"message":"180","line":22,"column":7,"nodeType":"178","messageId":"179","endLine":22,"endColumn":14},{"ruleId":"176","severity":1,"message":"210","line":28,"column":7,"nodeType":"178","messageId":"179","endLine":28,"endColumn":14},{"ruleId":"176","severity":1,"message":"211","line":56,"column":7,"nodeType":"178","messageId":"179","endLine":56,"endColumn":13},{"ruleId":"212","severity":2,"message":"213","line":72,"column":16,"nodeType":"178","messageId":"214","endLine":72,"endColumn":21},"no-unused-vars","'MainFc' is defined but never used.","Identifier","unusedVar","'Content' is assigned a value but never used.","no-native-reassign",["215"],"no-negated-in-lhs",["216"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Identicon' is defined but never used.","'Component' is defined but never used.",["215"],["216"],"'PostWrapper' is assigned a value but never used.",["215"],["216"],"'Work' is assigned a value but never used.","'Avatar' is assigned a value but never used.","'Recommendation' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Rightside' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'Leftside' is defined but never used.","'Loggedin' is assigned a value but never used.","'Container' is assigned a value but never used.","'Section' is assigned a value but never used.","'Layout' is assigned a value but never used.","no-undef","'login' is not defined.","undef","no-global-assign","no-unsafe-negation"]